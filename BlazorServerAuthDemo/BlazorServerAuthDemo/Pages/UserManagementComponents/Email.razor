@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities;
@using System.Text;

@inject UserManager<IdentityUser> UserManager
@inject AppAuthenticationStateProvider AppAuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IJSRuntime JS 

<h3>Email</h3>

<EditForm Model="_changeEmailForm" OnValidSubmit=@Update OnInvalidSubmit=@ClearNotify>
    <div class="row">
        <div class="col-6">
            <DataAnnotationsValidator />

            <div class="form-group row">
                <label class="col-form-label">
                    Email:
                </label>
                <div class="col-sm-10">
                    <InputText disabled=true @bind-Value="_changeEmailForm.CurrentEmail" class="form-control" id="Email"></InputText>
                </div>

            </div>
            <div class="form-group row">
                <label class="col-form-label">
                    New Email:
                </label>
                <div class="col-sm-10">
                    <InputText @bind-Value="_changeEmailForm.NewEmail" class="form-control" id="PhoneNumber"></InputText>
                </div>
            </div>
            <div class="form-group mt-2">
                <button class="btn btn-primary" type="submit">Update</button>
            </div>
        </div>
        <div class="col-6">
            <ValidationSummary />
        </div>

    </div>
</EditForm>

@if (_isUrlGenerated.HasValue && _isUrlGenerated.Value)
{
    <div class="row bg-success text-white" style="margin-top:10px; height:40px">
        <label class="p-2">Confirmation link has been generated. Check browser console.</label>
    </div>
}

@if (_isUrlGenerated.HasValue && !_isUrlGenerated.Value)
{
    <div class="row bg-danger text-dark" style="margin-top:10px; height:40px">
        <label class="p-2">The new email is the same like the current email...</label>
    </div>
}

@code {
    private ChangeEmailForm _changeEmailForm;
    private bool? _isUrlGenerated;
    private IdentityUser _user;

    protected override async Task OnInitializedAsync()
    {
        _changeEmailForm = new();
        _user = AppAuthenticationStateProvider.CurrentUser;
        _changeEmailForm.CurrentEmail = await UserManager.GetEmailAsync(_user);
    }

    private async Task Update()
    {
        ClearNotify();
        if (_changeEmailForm.CurrentEmail != _changeEmailForm.NewEmail)
        {
            var code = await UserManager.GenerateChangeEmailTokenAsync(_user, _changeEmailForm.NewEmail);
            code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
            var url = $"{NavigationManager.BaseUri}confirmchangeemail/{code}";
            await JS.InvokeVoidAsync("console.log", url);
            _isUrlGenerated = true;
        }
        else 
        {
            _isUrlGenerated = false;
        }
    }

    private void ClearNotify() => _isUrlGenerated = null;

    private class ChangeEmailForm
    {
        [EmailAddress]
        public string CurrentEmail { get; set; }
        [EmailAddress]
        public string NewEmail { get; set; } = string.Empty;
    }
}
